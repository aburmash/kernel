From df077a765a7d543281a82a4bf4943fd185ae9d28 Mon Sep 17 00:00:00 2001
From: Alex Burmashev <alexander.burmashev@oracle.com>
Date: Tue, 30 Apr 2024 11:06:59 +0000
Subject: [PATCH] Update debranding for OpenELA 9.4

Signed-off-by: Alex Burmashev <alexander.burmashev@oracle.com>
---
 SPECS/kernel.spec | 55 ++++++++++++++++++++++-------------------------
 1 file changed, 26 insertions(+), 29 deletions(-)

diff --git a/SPECS/kernel.spec b/SPECS/kernel.spec
index cc55976..6996873 100644
--- a/SPECS/kernel.spec
+++ b/SPECS/kernel.spec
@@ -910,19 +910,16 @@ Source84: mod-internal.list
 Source85: mod-partner.list
 Source86: mod-kvm.list
 
-Source100: rheldup3.x509
-Source101: rhelkpatch1.x509
-Source102: rhelimaca1.x509
-Source103: rhelima.x509
-Source104: rhelima_centos.x509
-Source105: nvidiagpuoot001.x509
+Source100: openeladup1.x509
+Source101: openelakpatch1.x509
 
-%if 0%{?centos}
-%define ima_signing_cert %{SOURCE104}
-%else
-%define ima_signing_cert %{SOURCE103}
-%endif
+%define driver_cert %{SOURCE100}
+%define kpatch_cert %{SOURCE101}
+
+Source102: openela-ima-ca.crt
+Source103: openela-imarelease.crt
 
+%define ima_signing_cert %{SOURCE103}
 %define ima_cert_name ima.cer
 
 Source150: dracut-virt.conf
@@ -969,6 +966,7 @@ Patch1: patch-%{patchversion}-redhat.patch
 
 # empty final patch to facilitate testing of kernel patches
 Patch999999: linux-kernel-test.patch
+Patch1000000: 1000-debrand-some-messages.patch
 
 # END OF PATCH DEFINITIONS
 
@@ -1242,11 +1240,11 @@ Summary: gcov graph and source files for coverage data collection.\
 %{nil}
 
 %package -n kernel-abi-stablelists
-Summary: The Red Hat Enterprise Linux kernel ABI symbol stablelists
+Summary: The OpenELA kernel ABI symbol stablelists
 AutoReqProv: no
 %description -n kernel-abi-stablelists
-The kABI package contains information pertaining to the Red Hat Enterprise
-Linux kernel ABI, including lists of kernel symbols that are needed by
+The kABI package contains information pertaining to the OpenELA
+kernel ABI, including lists of kernel symbols that are needed by
 external Linux kernel modules, and a yum plugin to aid enforcement.
 
 %if %{with_kabidw_base}
@@ -1255,8 +1253,8 @@ Summary: The baseline dataset for kABI verification using DWARF data
 Group: System Environment/Kernel
 AutoReqProv: no
 %description kernel-kabidw-base-internal
-The package contains data describing the current ABI of the Red Hat Enterprise
-Linux kernel, suitable for the kabi-dw tool.
+The package contains data describing the current ABI of the OpenELA
+kernel, suitable for the kabi-dw tool.
 %endif
 
 #
@@ -1355,7 +1353,7 @@ Requires: kernel%{?1:-%{1}}-modules-core-uname-r = %{KVERREL}%{uname_suffix %{?1
 AutoReq: no\
 AutoProv: yes\
 %description %{?1:%{1}-}modules-internal\
-This package provides kernel modules for the %{?2:%{2} }kernel package for Red Hat internal usage.\
+This package provides kernel modules for the %{?2:%{2} }kernel package for OpenELA internal usage.\
 %{nil}
 
 %if %{with_realtime}
@@ -1530,7 +1528,7 @@ Requires: kernel%{?1:-%{1}}-modules-uname-r = %{KVERREL}%{uname_suffix %{?1:%{1}
 AutoReq: no\
 AutoProv: yes\
 %description %{?1:%{1}-}modules-partner\
-This package provides kernel modules for the %{?2:%{2} }kernel package for Red Hat partners usage.\
+This package provides kernel modules for the %{?2:%{2} }kernel package for OpenELA partners usage.\
 %{nil}
 
 # Now, each variant package.
@@ -1697,6 +1695,7 @@ ApplyOptionalPatch patch-%{patchversion}-redhat.patch
 %endif
 
 ApplyOptionalPatch linux-kernel-test.patch
+ApplyOptionalPatch 1000-debrand-some-messages.patch
 
 # END OF PATCH APPLICATIONS
 
@@ -1770,8 +1769,8 @@ done
 # Add DUP and kpatch certificates to system trusted keys for RHEL
 %if 0%{?rhel}
 %if %{signkernel}%{signmodules}
-openssl x509 -inform der -in %{SOURCE100} -out rheldup3.pem
-openssl x509 -inform der -in %{SOURCE101} -out rhelkpatch1.pem
+openssl x509 -inform der -in %{driver_cert} -out rheldup3.pem
+openssl x509 -inform der -in %{kpatch_cert} -out rhelkpatch1.pem
 openssl x509 -inform der -in %{SOURCE102} -out rhelimaca1.pem
 openssl x509 -inform der -in %{SOURCE105} -out nvidiagpuoot001.pem
 cat rheldup3.pem rhelkpatch1.pem rhelimaca1.pem nvidiagpuoot001.pem > ../certs/rhel.pem
@@ -1790,7 +1789,7 @@ done
 # Adjust FIPS module name for RHEL
 %if 0%{?rhel}
 for i in *.config; do
-  sed -i 's/CONFIG_CRYPTO_FIPS_NAME=.*/CONFIG_CRYPTO_FIPS_NAME="Red Hat Enterprise Linux %{rhel} - Kernel Cryptographic API"/' $i
+  sed -i 's/CONFIG_CRYPTO_FIPS_NAME=.*/CONFIG_CRYPTO_FIPS_NAME="OpenELA %{rhel} - Kernel Cryptographic API"/' $i
 done
 %endif
 
@@ -2433,14 +2432,17 @@ BuildKernel() {
 
         # RHEL/CentOS specific .SBAT entries
 %if 0%{?centos}
-        SBATsuffix="centos"
+        SBATsuffix="rhel"
 %else
         SBATsuffix="rhel"
 %endif
         SBAT=$(cat <<- EOF
        linux,1,Red Hat,linux,$KernelVer,mailto:secalert@redhat.com
+        linux,1,OpenELA,linux,$KernelVer,https://bugs.openela.org
        linux.$SBATsuffix,1,Red Hat,linux,$KernelVer,mailto:secalert@redhat.com
+        linux.openela,1,OpenELA,linux,$KernelVer,https://bugs.openela.org
        kernel-uki-virt.$SBATsuffix,1,Red Hat,kernel-uki-virt,$KernelVer,mailto:secalert@redhat.com
+        kernel-uki-virt.openela,1,OpenELA,kernel-uki-virt,$KernelVer,https://bugs.openela.org
        EOF
        )
 
@@ -2463,13 +2465,8 @@ BuildKernel() {
 
 %if %{signkernel}
 
-%if 0%{?centos}
-       UKI_secureboot_name=centossecureboot204
-%else
-       UKI_secureboot_name=redhatsecureboot504
-%endif
-       UKI_secureboot_cert=%{_datadir}/pki/sb-certs/secureboot-uki-virt-%{_arch}.cer
-
+             UKI_secureboot_name=openelabootsigningcert
+        UKI_secureboot_cert=%{_datadir}/pki/sb-certs/secureboot-uki-virt-%{_arch}.cer
         %pesign -s -i $KernelUnifiedImage -o $KernelUnifiedImage.signed -a %{secureboot_ca_0} -c $UKI_secureboot_cert -n $UKI_secureboot_name
         if [ ! -s $KernelUnifiedImage.signed ]; then
           echo "pesigning failed"
-- 
2.39.3
